plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "net.minecraftforge.gradle.forge" version "d583588"
    id "org.spongepowered.mixin" version "451e8b3"
}

repositories {
    mavenCentral()
    maven { url = "https://maven.minecraftforge.net/" }
    maven { url = "https://repo.spongepowered.org/repository/maven-public/" }
    maven { url = "https://jitpack.io" }
}

version = "1.12.1-BETA"
group= "io.github.moulberry"
archivesBaseName = "Hychat"
String modid = "hychat"
String mixinClassifier = "dep"

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'UTF-8'

minecraft {
    version = "1.8.9-11.15.1.2318-1.8.9"
    runDir = "run"
    mappings = "stable_22"
    makeObfSourceJar = false
    clientJvmArgs += "-Dfml.coreMods.load=io.github.moulberry.hychat.tweaker.FMLLoadingPlugin"
    clientRunArgs += "--mixin mixins.${modid}.json"
    replace "@VERSION@": project.version
    replaceIn "HyChat.java"
}

runClient {
    standardInput = System.in
}

jar {
    manifest.attributes(
            "FMLCorePlugin": "io.github.moulberry.hychat.tweaker.FMLLoadingPlugin",
            "FMLCorePluginContainsFMLMod": true,
            "ForceLoadAsMod": true,
            "MixinConfigs": "mixins.${modid}.json",
            "ModSide": "CLIENT",
            "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
            "TweakOrder": "0"
    )

    enabled = false
}

sourceSets {
    main {
        ext.refMap = "mixins.${modid}.refmap.json"
    }
}

mixin {
    disableRefMapWarning = true
    defaultObfuscationEnv = searge
    add sourceSets.main, "mixins.${modid}.refmap.json"
}

configurations {
    include
    implementation.extendsFrom(include)
}

dependencies {
    include("org.spongepowered:mixin:0.7.11-SNAPSHOT") {
        exclude module: "guava"
        exclude module: "commons-io"
        exclude module: "gson"
        exclude module: "launchwrapper"
    }

    annotationProcessor("org.spongepowered:mixin:0.7.11-SNAPSHOT")
}

shadowJar {
    archiveClassifier.set("")
    configurations = [project.configurations.include]
    
    exclude "module-info.class"
    exclude "dummyThing"
    exclude "LICENSE.txt"

    duplicatesStrategy DuplicatesStrategy.EXCLUDE
}

reobf {
    shadowJar {
        classpath = sourceSets.main.compileClasspath
        mappingType = "SEARGE"
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task runClientFix {
    doLast {
        String fileName = "${archivesBaseName}-${version}-${mixinClassifier}.jar"
        ant.move file: "${buildDir}/libs/${fileName}", tofile: "${projectDir}/run/mods/${fileName}"
        ant.delete file: "${buildDir}/libs/${archivesBaseName}-${version}.jar"
    }
}

task moveResources {
    doLast {
        ant.move file: "${buildDir}/resources/main",
                todir: "${buildDir}/classes/java"
    }
}

moveResources.dependsOn(processResources)
classes.dependsOn(moveResources)

runClient.dependsOn(build)
runClient.dependsOn(runClientFix)

jar.dependsOn(shadowJar)
tasks.reobfJar.dependsOn(shadowJar)